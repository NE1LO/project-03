{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorite-render.js","../src/js/modalTraneFav.js","../src/favMain.js"],"sourcesContent":["import { apiInstance } from './services/api';\nimport { btnRender } from '../js/btnRender';\nimport { hidesElementFromPage } from './elementManagement';\n\nconst container = document.querySelector('.favorites-exercise-container');\nconst btnPagination = document.querySelector('.render-btn-list-pagination');\n\nconst key = 'favorites';\nlet localStorageData = null;\n\nconst bodyWidth = getComputedStyle(document.querySelector('body')).width;\nconst limit = parseInt(bodyWidth) < 768 ? 8 : 9;\nlet currentPage = 1;\nconst itemsPerPage = 8;\n\nconst getId = async idValue => {\n  try {\n    const response = await apiInstance.get(`/exercises/${idValue}`);\n    return response.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst parseLocalStorage = () => {\n  try {\n    localStorageData = JSON.parse(localStorage.getItem(key));\n  } catch (e) {\n    console.log(e);\n  }\n  return localStorageData;\n};\n\nconst ifLocalStorageClean = () => {\n  container.innerHTML = '';\n  const markupNotFound = `<div class=\"favorites-exercise-not-found-container\">\n        <img\n          class=\"favorites-exercise-img\"\n          src=\"././img/favorite-exercise/favorite-dumbbell.png\"\n          alt=\"dumbbell\"\n        />\n        <h3 class=\"favorites-exercise-not-found\">\n          It appears that you haven't added any exercises to your favorites yet.\n          To get started, you can add exercises that you like to your favorites\n          for easier access in the future.\n        </h3>\n      </div>`;\n  container.insertAdjacentHTML('beforeend', markupNotFound);\n  hidesElementFromPage(btnPagination);\n};\n\nconst ifLocalStorageIs = result => {\n  container.innerHTML = '';\n  const markup = result.reduce(\n    (html, { _id: id, bodyPart, name, target, burnedCalories, time }) =>\n      html +\n      `\n        <li class=\"workout-card__item\">\n          <div class=\"workout-card__block\">\n            <div class=\"workout-card__block-top\">\n              <div class=\"workout-card__block_button-rating\">\n                <button type=\"button\" class=\"workout-card__button-workout\">\n                  Workout\n                </button>\n                <div class=\"workout-card__rating-block\">\n                   <svg class=\"workout-card__basket-icon ${id}\">\n                    <use\n                      class=\"icon-basket ${id}\"\n                      href=\"././img/symbol-defs.svg#icon-trash\"\n                    ></use></svg>\n                </div>\n              </div>\n\n              <button class=\"workout-card__link-start\" data-id=\"${id}\">\n                Start\n                <svg class=\"workout-card__link-icon\" width=\"16\" height='16'>\n                  <use\n                    class=\"icon-arrow\"\n                    href=\"././img/symbol-defs.svg#icon-arrow\"\n                  ></use>\n                </svg>\n              </button>\n            </div>\n\n            <h3 class=\"workout-card__title\">\n              <svg class=\"workout-card__title-icon\">\n                <use\n                  class=\"icon-icon\"\n                  href=\"././img/symbol-defs.svg#icon-icon\"\n                ></use>\n              </svg>\n              ${name[0].toUpperCase() + name.slice(1)}\n            </h3>\n\n            <ul class=\"workout-card__statistic_list\">\n              <li class=\"workout-card__statistic_item\">\n                <p class=\"workout-card__statistic_text\">\n                  <span class=\"secondary-color-text\">Burned calories:</span>\n                  ${burnedCalories} / ${time} min\n                </p>\n              </li>\n              <li class=\"workout-card__statistic_item\">\n                <p class=\"workout-card__statistic_text\">\n                  <span class=\"secondary-color-text\">Body part:</span>\n                  ${bodyPart}\n                </p>\n              </li>\n              <li class=\"workout-card__statistic_item\">\n                <p class=\"workout-card__statistic_text\">\n                  <span class=\"secondary-color-text\">Target:</span> ${target}\n                </p>\n              </li>\n            </ul>\n          </div>\n        </li>`,\n    ''\n  );\n\n  container.insertAdjacentHTML('beforeend', markup);\n};\n\nasync function checkLocalStorage() {\n  parseLocalStorage();\n\n  if (localStorageData !== null && limit === 8 && localStorageData.length > 8) {\n    getDataForPage(currentPage);\n  } else if (localStorageData !== null && localStorageData.length !== 0) {\n    const result = await Promise.all(\n      localStorageData.map(idValue => getId(idValue))\n    );\n    ifLocalStorageIs(result);\n    hidesElementFromPage(btnPagination);\n  } else {\n    ifLocalStorageClean();\n  }\n}\n\ncheckLocalStorage();\n\nconst deleteCard = e => {\n  e.preventDefault();\n\n  const clickedElement = e.target;\n\n  const targetSvg = e.target.closest('.icon-basket ');\n\n  if (targetSvg) {\n    const currentElementId = clickedElement.classList[1];\n\n    const newLocalStorage = localStorageData.filter(\n      id => id !== currentElementId\n    );\n    localStorage.setItem(key, JSON.stringify(newLocalStorage));\n    checkLocalStorage();\n  }\n};\n\ncontainer.addEventListener('click', deleteCard);\n\nasync function getDataForPage(pageNumber) {\n  const totalPages = Math.ceil(localStorageData.length / itemsPerPage);\n\n  btnRender(totalPages, pageNumber);\n\n  const startIndex = (pageNumber - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const idForPage = localStorageData.slice(startIndex, endIndex);\n\n  const pageData = await Promise.all(idForPage.map(id => getId(id)));\n  ifLocalStorageIs(pageData);\n}\n\nbtnPagination.addEventListener('click', e => {\n  currentPage = Number(e.target.innerHTML);\n  checkLocalStorage();\n});\n","import { createStarsMarkup } from './getMarkup/createStarsMarkup';\nimport { openModalRating } from './modal-rating';\nimport { apiInstance } from './services/api';\nconst list = document.querySelector('.favorites-exercise-container');\nconst modal = document.querySelector('.modal-trane-background');\n\nconst closeModal = () => {\n  modal.classList.remove('modal-trane-background-active');\n  document.removeEventListener('click', closeModalOutside);\n  document.removeEventListener('keydown', closeModalOnEscape);\n};\nconst closeModalOutside = event => {\n  if (event.target === modal) {\n    closeModal();\n  }\n};\nconst closeModalOnEscape = event => {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n};\n\nconst getElemById = async id => {\n  const data = await apiInstance.get(`exercises/${id}`);\n  const response = data.data;\n  const markup = `<div class=\"modal-trane\">\n    <button class=\"modal-trane-btn-close\" type=\"button\">\n      <svg height=\"28\" width=\"28\" style=\"stroke: black\">\n        <use href=\"./img/symbol-defs.svg#icon-x\"></use>\n      </svg>\n    </button>\n    <div class=\"modal-trane-img-container\">\n      <img src=\"${response.gifUrl}\" alt=\"\" />\n    </div>\n    <div>\n      <div class=\"modal-trane-name-rating\">\n        <h2 class=\"modal-trane-title\">Air bake</h2>\n        <div class=\"modal-trane-rating-star\">\n          <p class=\"modal-trane-ratind\">${response.rating}</p>\n          <ul class=\"modal-trane-list-stars\">${createStarsMarkup(\n            response.rating\n          )}</ul>\n        </div>\n      </div>\n      <ul class=\"modal-trane-list-information\">\n        <li>\n          <p class=\"modal-trane-title-information\">Target</p>\n          <p class=\"modal-trane-information-text\">${response.target}</p>\n        </li>\n        <li>\n          <p class=\"modal-trane-title-information\">Body Part</p>\n          <p class=\"modal-trane-information-text\">${response.bodyPart}</p>\n        </li>\n        <li>\n          <p class=\"modal-trane-title-information\">Equipment</p>\n          <p class=\"modal-trane-information-text\">${response.equipment}</p>\n        </li>\n        <li>\n          <p class=\"modal-trane-title-information\">Popular</p>\n          <p class=\"modal-trane-information-text\">${response.popularity}</p>\n        </li>\n        <li>\n          <p class=\"modal-trane-title-information\">Burned calories</p>\n          <p class=\"modal-trane-information-text\">${response.burnedCalories}</p>\n        </li>\n      </ul>\n      <p class=\"modal-trane-text\"></p>\n      <ul class=\"modal-trane-list-btn\">\n        <li>\n          <button class=\"modal-trane-btn-add-favorites\" type=\"button\">\n            Add&nbsp;to&nbsp;favorites&nbsp;&#x2661;\n          </button>\n        </li>\n        <li>\n          <button class=\"modal-trane-btn-rating\" type=\"button\" data-id=\"${\n            response._id\n          }\">\n            Give a rating\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>`;\n  modal.innerHTML = markup;\n  const modalCloseBtn = document.querySelector('.modal-trane-btn-close');\n  modalCloseBtn.addEventListener('click', closeModal);\n  const btnRanig = document.querySelector('.modal-trane-btn-rating');\n  btnRanig.addEventListener('click', openModalRating);\n};\n\nlist.addEventListener('click', e => {\n  if (e.target.classList.contains('workout-card__link-start')) {\n    getElemById(e.target.dataset.id);\n    modal.classList.add('modal-trane-background-active');\n    document.addEventListener('click', closeModalOutside);\n    document.addEventListener('keydown', closeModalOnEscape);\n  }\n});\n","import './js/favorite-render';\nimport './js/modalTraneFav';\nimport { newQuote } from './js/quote';\nnewQuote();\nimport './js/change-theme';\n"],"names":["container","btnPagination","key","localStorageData","bodyWidth","limit","currentPage","itemsPerPage","getId","idValue","apiInstance","e","parseLocalStorage","ifLocalStorageClean","markupNotFound","hidesElementFromPage","ifLocalStorageIs","result","markup","html","id","bodyPart","name","target","burnedCalories","time","checkLocalStorage","getDataForPage","deleteCard","clickedElement","currentElementId","newLocalStorage","pageNumber","totalPages","btnRender","startIndex","endIndex","idForPage","pageData","list","modal","closeModal","closeModalOutside","closeModalOnEscape","event","getElemById","response","createStarsMarkup","openModalRating","newQuote"],"mappings":"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"}